#!/usr/bin/env bash
# original code is https://github.com/arks22/dotfiles/blob/162020cdafa60737d106b2d0d5fff7263850619e/bin/tmux-pane-border

function get-ssh-info {
  local current_pane_pid="$1"
  local ssh_info=$({ pgrep -flaP $current_pane_pid ; ps -o command -p $pane_pid; } | xargs -I{} echo {} | awk '/ssh/' | sed -E 's/^[0-9]*[[:blank:]]*ssh //')
  local port=$(echo $info | grep -Eo '\-p ([0-9]+)'|sed 's/-p //')
  [[ -z $port ]] && port=22
  ssh_info=$(echo $ssh_info | sed 's/\-p '"$port"'//g')
  local user=$(echo $ssh_info | awk '{print $NF}' | cut -f1 -d@)
  local host=$(echo $ssh_info | awk '{print $NF}' | cut -f2 -d@)

  if [ $user = $host ]; then
    user=$(whoami)
    local list=$(awk '
      $1 == "Host" {
        gsub("\\\\.", "\\\\.", $2);
        gsub("\\\\*", ".*", $2);
        host = $2;
        next;
      }
      $1 == "User" {
      $1 = "";
        sub( /^[[:space:]]*/, "" );
        printf "%s|%s\n", host, $0;
      }' ~/.ssh/config
    )
    local host_user
    echo $list | while read line; do
      host_user=${line#*|}
      if [[ "$host" =~ $line ]]; then
        user=$host_user
        break
      fi
    done
  fi
  echo "#[bg=colour013,fg=black] ssh:$user@$host #[default]"
}

function get-prompt-info() {
  local current_pane_path="$1"
  local git_status=$(cd $current_pane_path && git status 2>/dev/null )
  if [[ -n $git_status ]]; then
    local git_branch="$(echo $git_status| awk 'NR==1 {print $3}')"
    local state
    case $git_status in
      *Changes\ not\ staged* ) state="#[bg=colour013,fg=black] ± #[fg=default]" ;;
      *Changes\ to\ be\ committed* ) state="#[bg=blue,fg=black] + #[default]" ;;
      * ) state="#[bg=green,fg=black] ✔ #[default]" ;;
    esac
    local git_info
    if [[ $git_branch = "master" ]]; then
      git_info="#[underscore]#[bg=black,fg=colour014]|#[bold] ${git_branch} #[default]${state}"
    else
      git_info="#[underscore]#[bg=black,fg=colour014]| ${git_branch} #[default]${state}"
    fi
  else
    git_info=""
  fi
  local current_pane_path="#[bg=black,fg=cyan] #[underscore]$current_pane_path #[default]"
  echo "${current_pane_path}${git_info}" | sed -E "s|$HOME|~|"
}

function main() {
  local current_pane_command="$1"
  local current_pane_pid="$2"
  local current_pane_path="$3"
  local info
  if [[ $current_pane_command = "ssh" ]]; then
    info="$(get-ssh-info $current_pane_pid)"
  else
    info="$(get-prompt-info $current_pane_path)"
  fi
  echo "$info"
}

main $@
