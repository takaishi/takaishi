#!/usr/bin/env ruby

require 'bundler/inline'
require 'optparse'

gemfile true do
  source 'https://rubygems.org'
  gem 'octokit', require: true
end

op = OptionParser.new
opts = {
  org: '',
  user: ''
}

op.on('', '--org VALUE', '') do |v|
  opts[:org] = v
end

op.on('', '--user VALUE', '') do |v|
  opts[:user] = v
end

begin
  args = op.parse(ARGV)
rescue OptionParser::InvalidOption => e
  usage e.message
end


client = Octokit::Client.new(access_token: ENV.fetch('GITHUB_TOKEN'))
client.auto_paginate = true

repos = if opts[:org] != ''
          client.organization_repositories(opts[:org], type: 'all')
        elsif opts[:user] != ''
          client.repositories(opts[:user], type: 'owner', archived: false)
        end

repos.reject{|repo| repo[:archived] }.each do |repo|
  puts repo[:full_name]
  unless Dir.exist?("#{ENV['HOME']}/src/github.com/#{repo[:full_name]}")
    puts `git clone #{repo[:ssh_url]} #{ENV['HOME']}/src/github.com/#{repo[:full_name]}`
    system(`git clone #{repo[:ssh_url]} #{ENV['HOME']}/src/github.com/#{repo[:full_name]}`)
  end
end

